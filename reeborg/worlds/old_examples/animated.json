{
  "robots": [],
  "walls": {},
  "description": "Examples showing the three types of animated tiles.",
  "small_tiles": false,
  "rows": 11,
  "cols": 6,
  "onload": "RUR.onload_set_programming_mode(\"javascript\");\n",
  "editor": "RUR.ANIMATION_TIME = 300; // default is 120 ms\n\nnumbers = [\"src/images/1.png\",\n             \"src/images/2.png\",\n             \"src/images/3.png\",\n             \"src/images/4.png\",\n             \"src/images/5.png\"];\n\ntile_sync = {\n    name: \"sync\",\n    images : numbers,\n    selection_method: \"sync\"\n    };\n\ntile_ordered = {\n    name: \"ordered\",\n    images : numbers,\n    selection_method: \"ordered\"\n    };\n\ntile_random = {\n    name : \"random\",\n    images : numbers,\n    selection_method: \"random\"\n    };\ntile_cycle = {\n    name : \"stay\",\n    images : numbers,\n    selection_method: \"cycle stay\"\n    };\n\ntile_remove = {\n    name : \"remove\",\n    images : numbers,\n    selection_method: \"cycle remove\"\n    };\n\n\n// url is used as a unique identifier of this program\n// in a test that avoids reloading (and redrawing)\n// the world needlessly\nvar url = \"worlds/examples/animated_tiles.json\";\n\nif (RUR.PUBLIC_DICT[url] == undefined){\n    RUR.add_new_thing(tile_sync);\n    RUR.add_new_thing(tile_ordered);\n    RUR.add_new_thing(tile_random);\n    RUR.add_new_thing(tile_cycle);\n    RUR.add_new_thing(tile_remove);\n    RUR.PUBLIC_DICT[url] = true;\n}\n\nvar img = \"<img src='src/images/play.png' style='background-color:black'>\";\nvar html = \"Program paused. Click on \" + img + \n           \" above to resume\";\nfunction draw_tiles(name, y) {\n    for(var x=1; x<=6; x++){\n        RUR.add_background_tile(name, x, y);\n    }\n    print_html(html, true);\n    pause();\n    print_html('', true);\n}\n\ndraw_tiles(\"sync\", 2);\ndraw_tiles(\"ordered\", 4);\ndraw_tiles(\"random\", 6);\ndraw_tiles(\"stay\", 8);\ndraw_tiles(\"remove\", 10);\n\n"
}