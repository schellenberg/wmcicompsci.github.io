{
  "robots": [
    {
      "x": 1,
      "y": 4,
      "_prev_x": 1,
      "_prev_y": 4,
      "_prev_orientation": -1,
      "possible_initial_positions": [
        [
          1,
          2
        ],
        [
          1,
          3
        ],
        [
          1,
          4
        ]
      ],
      "objects": {},
      "_orientation": -1
    }
  ],
  "walls": {
    "7,6": [
      "north"
    ],
    "1,10": [
      "north"
    ]
  },
  "description": "A simple, empty world, ready for Reeborg to explore.\n<br>--<br><em>Un simple monde vide, que Reeborg peut explorer à sa guise.</em>",
  "small_tiles": false,
  "rows": 12,
  "cols": 14,
  "objects": {
    "2,1": {
      "token": 1
    },
    "3,1": {
      "triangle": 1
    },
    "4,1": {
      "square": 1
    },
    "5,1": {
      "strawberry": 1
    },
    "6,1": {
      "banana": 1
    },
    "7,1": {
      "orange": 1
    },
    "8,1": {
      "apple": 1
    },
    "10,1": {
      "dandelion": 1
    },
    "11,1": {
      "carrot": 1
    },
    "12,1": {
      "tulip": 1
    },
    "13,1": {
      "daisy": 1
    },
    "9,1": {
      "leaf": 1
    },
    "14,1": {
      "star": 1
    },
    "9,7": {
      "box": 1
    },
    "9,4": {
      "box": 1
    },
    "2,11": {
      "box": 1
    },
    "3,11": {
      "box": 1
    },
    "4,11": {
      "box": 1
    },
    "5,11": {
      "box": 1
    },
    "7,5": {
      "box": 1
    },
    "6,5": {
      "box": 1
    },
    "5,5": {
      "box": 1
    },
    "4,5": {
      "box": 1
    },
    "3,5": {
      "box": 1
    },
    "2,5": {
      "box": 1
    }
  },
  "goal": {
    "objects": {
      "2,2": {
        "token": 1
      },
      "3,2": {
        "triangle": 1
      },
      "4,2": {
        "square": 1
      },
      "5,2": {
        "strawberry": 1
      },
      "6,2": {
        "banana": 1
      },
      "7,2": {
        "orange": 1
      },
      "8,2": {
        "apple": 1
      },
      "10,2": {
        "dandelion": 1
      },
      "11,2": {
        "carrot": 1
      },
      "12,2": {
        "tulip": 1
      },
      "13,2": {
        "daisy": 1
      },
      "9,2": {
        "leaf": 1
      },
      "14,2": {
        "star": 1
      },
      "9,3": {
        "box": 1
      },
      "7,6": {
        "box": 1
      },
      "6,6": {
        "box": 1
      },
      "5,6": {
        "box": 1
      },
      "3,6": {
        "box": 1
      },
      "2,6": {
        "box": 1
      },
      "2,12": {
        "box": 1
      },
      "3,12": {
        "box": 1
      },
      "4,12": {
        "box": 1
      },
      "5,12": {
        "box": 1
      },
      "4,6": {
        "box": 1
      }
    },
    "walls": {
      "7,4": [
        "east"
      ]
    },
    "possible_final_positions": [
      [
        13,
        10
      ],
      [
        12,
        10
      ],
      [
        11,
        10
      ],
      [
        10,
        10
      ]
    ],
    "position": {
      "image": "house",
      "x": 10,
      "y": 10
    }
  },
  "tiles": {
    "14,4": "ice",
    "14,5": "water",
    "14,6": "mud",
    "14,7": "grass",
    "14,8": "bricks",
    "14,3": "gravel",
    "9,6": "water",
    "9,5": "water",
    "6,7": "bricks",
    "2,12": "mud",
    "3,12": "grass",
    "4,12": "gravel",
    "5,12": "ice"
  },
  "solid_objects": {
    "13,7": {
      "fence4": 1
    },
    "12,7": {
      "fence5": 1
    },
    "11,7": {
      "fence6": 1
    },
    "10,7": {
      "fence7": 1
    },
    "9,5": {
      "bridge": 1
    },
    "5,7": {
      "fence4": 1
    },
    "4,7": {
      "fence5": 1
    },
    "3,7": {
      "fence6": 1
    },
    "2,7": {
      "fence7": 1
    }
  },
  "editor": "from biblio import record, heading, show_results\n\npense(0)\nFAIL = False\nOK = True\nreeborg = robot_par_defaut()\nheading(\"Any failing tests appear above this heading.\")\nrecord(\"This is not a failing test! Just confirming that recording works\", FAIL)\ndef turn(n=1):\n    for i in range(n):\n        tourne_a_gauche()\n\n# start at random position and orientation\n# test way to orient\nwhile not est_face_au_nord():\n    turn()\n\n# hitting wall properly recorded\nturn()  # face wall\ntry:\n    avance()\n    record(\"Hit wall\", FAIL)\nexcept ReeborgError:\n    record(\"Hit wall\", OK)\n\n# facing left wall; right should be clear\ntry:\n    assert rien_a_droite()\n    record(\"1. tested right_is_clear()\", OK)\nexcept AssertionError:\n    record(\"1. tested right_is_clear()\", FAIL)\n\nturn()\n# facing south wall; right should NOT be clear\ntry:\n    assert rien_a_droite()\n    record(\"2. tested right_is_clear()\", FAIL)\nexcept AssertionError:\n    record(\"2. tested right_is_clear()\", OK)\n\n\n# moving towards (1, 1)\nwhile rien_devant():\n    avance()\n\ntry:\n    assert reeborg.body.x == 1\n    assert reeborg.body.y == 1\n    record(\"At (1,1)\", OK)\nexcept ReeborgError:\n    record(\"At (1,1)\", FAIL)\n\nturn()\n\nitems = ['jeton', 'triangle', 'carré', 'fraise',\n         'banane', 'orange', 'pomme', 'feuille',\n         'pissenlit', 'carotte', 'tulipe', 'marguerite', \n         'étoile']\nfor item in items:\n    avance()\n    prend(item)\n\nturn()\navance()\nturn()\nwhile rien_devant():\n    avance()\nturn(2)\n\nfor item in items:\n    avance()\n    depose(item)\n\n# Trying different terrains\nturn()\navance()  # on gravel\ntry:\n    avance()  # on ice, will keep going\n    record(\"Caught water\", FAIL)\nexcept ReeborgError:\n    record(\"Caught water\", OK)\n    \n\ntry:\n    avance() \n    record(\"Caught mud\", FAIL)\nexcept ReeborgError:\n    record(\"Caught mud\", OK)  \n\n \n\navance()  # on grass; safe\ntry:\n    avance()  # on brick, will keep going\n    record(\"Caught brick\", FAIL)\nexcept ReeborgError:\n    record(\"Caught brick\", OK)   \n\nturn()  # should always be safe\navance()\n\ntry:\n    assert reeborg.body.x == 13\n    assert reeborg.body.y == 8\n    record(\"At (13, 8)\", OK)\nexcept ReeborgError:\n    record(\"At (13, 8)\", FAIL)\n\n    \nturn()\nfor i in range(4):\n    try:\n        avance()\n        record(\"Caught fence\", FAIL)\n    except ReeborgError:\n        record(\"Caught fence\", OK)\n        turn(3)\n        avance()\n        turn()\n\ntry:\n    avance()\n    record(\"Push box in water\", OK)\nexcept ReeborgError:\n    record(\"Push box in water\", FAIL)\ntry:\n    avance()\n    record(\"Box now bridge\", OK)\nexcept ReeborgError:\n    record(\"Box now bridge\", FAIL)\ntry:\n    avance()\n    record(\"move over old bridge\", OK)\nexcept ReeborgError:\n    record(\"move over old bridge\", FAIL)\ntry:\n    avance()\n    record(\"Push box to goal\", OK)\nexcept ReeborgError:\n    record(\"Push box to goal\", FAIL)\nturn(3)\navance()\n\ntry:\n    construit_un_mur()\n    record(\"Building wall\", OK)\nexcept ReeborgError:\n    record(\"Building wall\", FAIL)\n\nturn()\navance()\nturn(3)\navance()\nturn(3)\navance()\nfor item in [\"mur\", \"brique\", \"cloture1\", \"cloture2\", \"cloture3\", \"cloture4\"]:\n    print(item)\n    try:\n        avance()\n        avance()\n        avance()\n        record(\"Cannot push box into: \"+item, FAIL)\n    except ReeborgError:\n        record(\"Cannot push box into: \"+item, OK)\n        turn(2)\n        avance()\n        avance()\n        turn(3)\n        avance()\n        turn(3)\n\nwhile rien_devant():\n    avance()\n\nturn(3)\navance()\nturn()\nfor item in ['boue', 'gazon', 'gravier', 'glace']:\n    try:\n         avance()\n         turn(2)\n         avance()\n         turn()\n         avance()\n         turn()\n         record(\"Can push box onto: \"+item, OK)\n    except ReeborgError:\n         record(\"Can push box onto: \"+item, FAIL)\n\nturn(3)\nwhile not au_but():\n    avance()\n\nshow_results()",
  "library": "results = []\n_failure = '<p style=\"color:red\">%s: FAIL</p>'\n_success = '<p style=\"color:green\">%s: ok</p>'\n_heading = '<h2>%s</h2>'\n\ndef heading(text):\n    results.append(_heading%text)\n\ndef record(name, ok):\n    if ok:\n        results.append(_success%name)\n    else:\n        results.insert(0, _failure%name)\n\ndef show_results():\n    print_html(''.join(results))\n\n"
}